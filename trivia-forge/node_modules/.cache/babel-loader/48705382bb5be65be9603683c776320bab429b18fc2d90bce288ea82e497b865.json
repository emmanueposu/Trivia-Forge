{"ast":null,"code":"var _jsxFileName = \"/Users/SammyD/Desktop/Trivia-Forge/trivia-forge/src/Pages/TriviaGenPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport OpenAI from \"openai\";\n\n// initialize openai client\n// reference: https://platform.openai.com/docs/api-reference/making-requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\nfunction TriviaGenPage() {\n  _s();\n  const [numberOfQuestions, setNumberOfQuestions] = useState('');\n  const [category, setCategory] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // api call\n    try {\n      const prompt = `Generate ${numberOfQuestions} trivia questions about ${category}.`;\n\n      // API call to OpenAI\n      const completion = await openai.createCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"user\",\n          content: prompt\n        }]\n        // adjust and use token limit if necessary\n        // max_tokens: 200\n        // implment and adjust temperature if needed\n        // temperature scale is 0-1 and used to tune randomness of output\n        // temperature: .5\n      });\n      console.log(completion.data.choices[0].message);\n    } catch (error) {\n      console.error('Error calling OpenAI API:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trivia Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"triviaTitle\",\n          children: \"Number of Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numberOfQuestions,\n          onChange: e => setNumberOfQuestions(Math.min(10, Math.max(1, parseInt(e.target.value, 10)))),\n          className: \"form-control\",\n          id: \"triviaTitle\",\n          placeholder: \"Number of Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"triviaCategory\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          className: \"form-control\",\n          id: \"triviaCategory\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"triviaAnswer\",\n          children: \"placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"triviaAnswer\",\n          placeholder: \"Place holder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(TriviaGenPage, \"5EWR5EgCw9Hns2v+6hnb2mRj/1Y=\");\n_c = TriviaGenPage;\nexport default TriviaGenPage;\nvar _c;\n$RefreshReg$(_c, \"TriviaGenPage\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","TriviaGenPage","_s","numberOfQuestions","setNumberOfQuestions","category","setCategory","handleSubmit","event","preventDefault","prompt","completion","createCompletion","model","messages","role","content","console","log","data","choices","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","for","type","value","onChange","e","Math","min","max","parseInt","target","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/SammyD/Desktop/Trivia-Forge/trivia-forge/src/Pages/TriviaGenPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport OpenAI from \"openai\";\n\n\n// initialize openai client\n// reference: https://platform.openai.com/docs/api-reference/making-requests\nconst openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n});\n\nfunction TriviaGenPage() {\n    const [numberOfQuestions, setNumberOfQuestions] = useState('');\n    const [category, setCategory] = useState('');\n    \n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        // api call\n        try {\n            const prompt = `Generate ${numberOfQuestions} trivia questions about ${category}.`;\n\n            // API call to OpenAI\n            const completion = await openai.createCompletion({\n                model: \"gpt-3.5-turbo\",\n                messages: [{role: \"user\", content: prompt }],\n                // adjust and use token limit if necessary\n                // max_tokens: 200\n                // implment and adjust temperature if needed\n                // temperature scale is 0-1 and used to tune randomness of output\n                // temperature: .5\n            });\n            \n            console.log(completion.data.choices[0].message);\n        } catch (error) {\n            console.error('Error calling OpenAI API:', error);\n        }\n    };\n\n\n    return (\n        <div>\n            <h1>\n                Trivia Generator\n            </h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label for=\"triviaTitle\">Number of Questions:</label>\n                    <input \n                        type=\"number\"\n                        value={numberOfQuestions}\n                        onChange={e => setNumberOfQuestions(Math.min(10, Math.max(1, parseInt(e.target.value, 10))))}\n                        className=\"form-control\" \n                        id=\"triviaTitle\" \n                        placeholder=\"Number of Questions\" \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"triviaCategory\">Category:</label>\n                    <input \n                        type=\"text\"\n                        value={category}\n                        onChange={e => setCategory(e.target.value)}\n                        className=\"form-control\" \n                        id=\"triviaCategory\" \n                        placeholder=\"Category\" \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"triviaAnswer\">placeholder</label>\n                    <input type=\"text\" className=\"form-control\" id=\"triviaAnswer\" placeholder=\"Place holder\" />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Generate</button>\n            </form>\n\n        </div>\n    );\n\n}\nexport default TriviaGenPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}