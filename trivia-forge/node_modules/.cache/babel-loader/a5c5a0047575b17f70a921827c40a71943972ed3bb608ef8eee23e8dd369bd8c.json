{"ast":null,"code":"export const isAssistantMessage = message => {\n  return (message === null || message === void 0 ? void 0 : message.role) === 'assistant';\n};\nexport const isFunctionMessage = message => {\n  return (message === null || message === void 0 ? void 0 : message.role) === 'function';\n};\nexport const isToolMessage = message => {\n  return (message === null || message === void 0 ? void 0 : message.role) === 'tool';\n};\nexport function isPresent(obj) {\n  return obj != null;\n}","map":{"version":3,"names":["isAssistantMessage","message","role","isFunctionMessage","isToolMessage","isPresent","obj"],"sources":["/Users/SammyD/Desktop/Trivia-Forge/trivia-forge/node_modules/openai/src/lib/chatCompletionUtils.ts"],"sourcesContent":["import {\n  type ChatCompletionAssistantMessageParam,\n  type ChatCompletionFunctionMessageParam,\n  type ChatCompletionMessageParam,\n  type ChatCompletionToolMessageParam,\n} from \"../resources\";\n\nexport const isAssistantMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionAssistantMessageParam => {\n  return message?.role === 'assistant';\n};\n\nexport const isFunctionMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionFunctionMessageParam => {\n  return message?.role === 'function';\n};\n\nexport const isToolMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionToolMessageParam => {\n  return message?.role === 'tool';\n};\n\nexport function isPresent<T>(obj: T | null | undefined): obj is T {\n  return obj != null;\n}\n"],"mappings":"AAOA,OAAO,MAAMA,kBAAkB,GAC7BC,OAAsD,IACJ;EAClD,OAAO,CAAAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,IAAI,MAAK,WAAW;AACtC,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAC5BF,OAAsD,IACL;EACjD,OAAO,CAAAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,IAAI,MAAK,UAAU;AACrC,CAAC;AAED,OAAO,MAAME,aAAa,GACxBH,OAAsD,IACT;EAC7C,OAAO,CAAAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,IAAI,MAAK,MAAM;AACjC,CAAC;AAED,OAAM,SAAUG,SAASA,CAAIC,GAAyB;EACpD,OAAOA,GAAG,IAAI,IAAI;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}