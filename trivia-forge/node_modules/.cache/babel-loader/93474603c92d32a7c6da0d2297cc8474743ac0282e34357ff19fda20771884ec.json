{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as Pagination from 'openai/pagination';\nimport * as API from 'openai/resources/index';\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor() {\n    var _Core$readEnv, _Core$readEnv2, _options$timeout;\n    let {\n      baseURL = Core.readEnv('OPENAI_BASE_URL'),\n      apiKey = Core.readEnv('OPENAI_API_KEY'),\n      organization = (_Core$readEnv = Core.readEnv('OPENAI_ORG_ID')) !== null && _Core$readEnv !== void 0 ? _Core$readEnv : null,\n      project = (_Core$readEnv2 = Core.readEnv('OPENAI_PROJECT_ID')) !== null && _Core$readEnv2 !== void 0 ? _Core$readEnv2 : null,\n      ...opts\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (apiKey === undefined) {\n      throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n    }\n    const options = {\n      apiKey,\n      organization,\n      project,\n      ...opts,\n      baseURL: baseURL || \"https://api.openai.com/v1\"\n    };\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n    }\n    super({\n      baseURL: options.baseURL,\n      timeout: (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch\n    });\n    this.completions = new API.Completions(this);\n    this.chat = new API.Chat(this);\n    this.embeddings = new API.Embeddings(this);\n    this.files = new API.Files(this);\n    this.images = new API.Images(this);\n    this.audio = new API.Audio(this);\n    this.moderations = new API.Moderations(this);\n    this.models = new API.Models(this);\n    this.fineTuning = new API.FineTuning(this);\n    this.beta = new API.Beta(this);\n    this.batches = new API.Batches(this);\n    this._options = options;\n    this.apiKey = apiKey;\n    this.organization = organization;\n    this.project = project;\n  }\n  defaultQuery() {\n    return this._options.defaultQuery;\n  }\n  defaultHeaders(opts) {\n    return {\n      ...super.defaultHeaders(opts),\n      'OpenAI-Organization': this.organization,\n      'OpenAI-Project': this.project,\n      ...this._options.defaultHeaders\n    };\n  }\n  authHeaders(opts) {\n    return {\n      Authorization: \"Bearer \".concat(this.apiKey)\n    };\n  }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexport const {\n  OpenAIError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError\n} = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (OpenAI) {\n  // Helper functions\n  OpenAI.toFile = Uploads.toFile;\n  OpenAI.fileFromPath = Uploads.fileFromPath;\n  OpenAI.Page = Pagination.Page;\n  OpenAI.CursorPage = Pagination.CursorPage;\n  OpenAI.Completions = API.Completions;\n  OpenAI.Chat = API.Chat;\n  OpenAI.Embeddings = API.Embeddings;\n  OpenAI.Files = API.Files;\n  OpenAI.FileObjectsPage = API.FileObjectsPage;\n  OpenAI.Images = API.Images;\n  OpenAI.Audio = API.Audio;\n  OpenAI.Moderations = API.Moderations;\n  OpenAI.Models = API.Models;\n  OpenAI.ModelsPage = API.ModelsPage;\n  OpenAI.FineTuning = API.FineTuning;\n  OpenAI.Beta = API.Beta;\n  OpenAI.Batches = API.Batches;\n  OpenAI.BatchesPage = API.BatchesPage;\n})(OpenAI || (OpenAI = {}));\nexport default OpenAI;","map":{"version":3,"names":["Core","Errors","Uploads","Pagination","API","OpenAI","APIClient","constructor","_Core$readEnv","_Core$readEnv2","_options$timeout","baseURL","readEnv","apiKey","organization","project","opts","arguments","length","undefined","OpenAIError","options","dangerouslyAllowBrowser","isRunningInBrowser","timeout","httpAgent","maxRetries","fetch","completions","Completions","chat","Chat","embeddings","Embeddings","files","Files","images","Images","audio","Audio","moderations","Moderations","models","Models","fineTuning","FineTuning","beta","Beta","batches","Batches","_options","defaultQuery","defaultHeaders","authHeaders","Authorization","concat","_a","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","NotFoundError","ConflictError","RateLimitError","BadRequestError","AuthenticationError","InternalServerError","PermissionDeniedError","UnprocessableEntityError","toFile","fileFromPath","Page","CursorPage","FileObjectsPage","ModelsPage","BatchesPage"],"sources":["/Users/SammyD/Desktop/Trivia-Forge/trivia-forge/node_modules/openai/src/index.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport * as Core from './core';\nimport * as Errors from './error';\nimport { type Agent } from './_shims/index';\nimport * as Uploads from './uploads';\nimport * as Pagination from \"./pagination\";\nimport * as API from \"./resources/index\";\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['OPENAI_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * Defaults to process.env['OPENAI_ORG_ID'].\n   */\n  organization?: string | null | undefined;\n\n  /**\n   * Defaults to process.env['OPENAI_PROJECT_ID'].\n   */\n  project?: string | null | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['OPENAI_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery;\n\n  /**\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\n   */\n  dangerouslyAllowBrowser?: boolean;\n}\n\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n  apiKey: string;\n  organization: string | null;\n  project: string | null;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('OPENAI_BASE_URL'),\n    apiKey = Core.readEnv('OPENAI_API_KEY'),\n    organization = Core.readEnv('OPENAI_ORG_ID') ?? null,\n    project = Core.readEnv('OPENAI_PROJECT_ID') ?? null,\n    ...opts\n  }: ClientOptions = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.OpenAIError(\n        \"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      apiKey,\n      organization,\n      project,\n      ...opts,\n      baseURL: baseURL || `https://api.openai.com/v1`,\n    };\n\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.OpenAIError(\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\",\n      );\n    }\n\n    super({\n      baseURL: options.baseURL!,\n      timeout: options.timeout ?? 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n    this._options = options;\n\n    this.apiKey = apiKey;\n    this.organization = organization;\n    this.project = project;\n  }\n\n  completions: API.Completions = new API.Completions(this);\n  chat: API.Chat = new API.Chat(this);\n  embeddings: API.Embeddings = new API.Embeddings(this);\n  files: API.Files = new API.Files(this);\n  images: API.Images = new API.Images(this);\n  audio: API.Audio = new API.Audio(this);\n  moderations: API.Moderations = new API.Moderations(this);\n  models: API.Models = new API.Models(this);\n  fineTuning: API.FineTuning = new API.FineTuning(this);\n  beta: API.Beta = new API.Beta(this);\n  batches: API.Batches = new API.Batches(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      'OpenAI-Organization': this.organization,\n      'OpenAI-Project': this.project,\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return { Authorization: `Bearer ${this.apiKey}` };\n  }\n\n  static OpenAI = this;\n\n  static OpenAIError = Errors.OpenAIError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n}\n\nexport const {\n  OpenAIError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} = Errors;\n\nexport import toFile = Uploads.toFile;\nexport import fileFromPath = Uploads.fileFromPath;\n\nexport namespace OpenAI {\n  // Helper functions\n  export import toFile = Uploads.toFile;\n  export import fileFromPath = Uploads.fileFromPath;\n\n  export import RequestOptions = Core.RequestOptions;\n\n  export import Page = Pagination.Page;\n  export import PageResponse = Pagination.PageResponse;\n\n  export import CursorPage = Pagination.CursorPage;\n  export import CursorPageParams = Pagination.CursorPageParams;\n  export import CursorPageResponse = Pagination.CursorPageResponse;\n\n  export import Completions = API.Completions;\n  export import Completion = API.Completion;\n  export import CompletionChoice = API.CompletionChoice;\n  export import CompletionUsage = API.CompletionUsage;\n  export import CompletionCreateParams = API.CompletionCreateParams;\n  export import CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\n  export import CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\n\n  export import Chat = API.Chat;\n  export import ChatModel = API.ChatModel;\n  export import ChatCompletion = API.ChatCompletion;\n  export import ChatCompletionAssistantMessageParam = API.ChatCompletionAssistantMessageParam;\n  export import ChatCompletionChunk = API.ChatCompletionChunk;\n  export import ChatCompletionContentPart = API.ChatCompletionContentPart;\n  export import ChatCompletionContentPartImage = API.ChatCompletionContentPartImage;\n  export import ChatCompletionContentPartText = API.ChatCompletionContentPartText;\n  export import ChatCompletionFunctionCallOption = API.ChatCompletionFunctionCallOption;\n  export import ChatCompletionFunctionMessageParam = API.ChatCompletionFunctionMessageParam;\n  export import ChatCompletionMessage = API.ChatCompletionMessage;\n  export import ChatCompletionMessageParam = API.ChatCompletionMessageParam;\n  export import ChatCompletionMessageToolCall = API.ChatCompletionMessageToolCall;\n  export import ChatCompletionNamedToolChoice = API.ChatCompletionNamedToolChoice;\n  export import ChatCompletionRole = API.ChatCompletionRole;\n  export import ChatCompletionSystemMessageParam = API.ChatCompletionSystemMessageParam;\n  export import ChatCompletionTokenLogprob = API.ChatCompletionTokenLogprob;\n  export import ChatCompletionTool = API.ChatCompletionTool;\n  export import ChatCompletionToolChoiceOption = API.ChatCompletionToolChoiceOption;\n  export import ChatCompletionToolMessageParam = API.ChatCompletionToolMessageParam;\n  export import ChatCompletionUserMessageParam = API.ChatCompletionUserMessageParam;\n  export import ChatCompletionCreateParams = API.ChatCompletionCreateParams;\n  export import ChatCompletionCreateParamsNonStreaming = API.ChatCompletionCreateParamsNonStreaming;\n  export import ChatCompletionCreateParamsStreaming = API.ChatCompletionCreateParamsStreaming;\n\n  export import Embeddings = API.Embeddings;\n  export import CreateEmbeddingResponse = API.CreateEmbeddingResponse;\n  export import Embedding = API.Embedding;\n  export import EmbeddingCreateParams = API.EmbeddingCreateParams;\n\n  export import Files = API.Files;\n  export import FileContent = API.FileContent;\n  export import FileDeleted = API.FileDeleted;\n  export import FileObject = API.FileObject;\n  export import FileObjectsPage = API.FileObjectsPage;\n  export import FileCreateParams = API.FileCreateParams;\n  export import FileListParams = API.FileListParams;\n\n  export import Images = API.Images;\n  export import Image = API.Image;\n  export import ImagesResponse = API.ImagesResponse;\n  export import ImageCreateVariationParams = API.ImageCreateVariationParams;\n  export import ImageEditParams = API.ImageEditParams;\n  export import ImageGenerateParams = API.ImageGenerateParams;\n\n  export import Audio = API.Audio;\n\n  export import Moderations = API.Moderations;\n  export import Moderation = API.Moderation;\n  export import ModerationCreateResponse = API.ModerationCreateResponse;\n  export import ModerationCreateParams = API.ModerationCreateParams;\n\n  export import Models = API.Models;\n  export import Model = API.Model;\n  export import ModelDeleted = API.ModelDeleted;\n  export import ModelsPage = API.ModelsPage;\n\n  export import FineTuning = API.FineTuning;\n\n  export import Beta = API.Beta;\n\n  export import Batches = API.Batches;\n  export import Batch = API.Batch;\n  export import BatchError = API.BatchError;\n  export import BatchRequestCounts = API.BatchRequestCounts;\n  export import BatchesPage = API.BatchesPage;\n  export import BatchCreateParams = API.BatchCreateParams;\n  export import BatchListParams = API.BatchListParams;\n\n  export import ErrorObject = API.ErrorObject;\n  export import FunctionDefinition = API.FunctionDefinition;\n  export import FunctionParameters = API.FunctionParameters;\n}\n\nexport default OpenAI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}