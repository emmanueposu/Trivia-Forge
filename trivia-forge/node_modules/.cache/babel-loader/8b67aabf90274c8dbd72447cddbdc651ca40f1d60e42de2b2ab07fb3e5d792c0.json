{"ast":null,"code":"import React,{useState}from\"react\";import OpenAI from\"openai\";// initialize openai client\n// reference: https://platform.openai.com/docs/api-reference/making-requests\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const openai=new OpenAI({apiKey:process.env.OPENAI_API_KEY});function TriviaGenPage(){const[numberOfQuestions,setNumberOfQuestions]=useState('');const[category,setCategory]=useState('');const handleSubmit=async event=>{event.preventDefault();// api call\ntry{const prompt='Generate ${numberOfQuestions} trivia questions about ${category}.';// API call to OpenAI\nconst completion=await openai.createCompletion({model:\"gpt-3.5-turbo\",messages:[{role:\"user\",content:prompt}]// adjust and use token limit if necessary\n// max_tokens: 200\n// implment and adjust temperature if needed\n// temperature scale is 0-1 and used to tune randomness of output\n// temperature: .5\n});console.log(completion.data.choices[0].message);}catch(error){console.error('Error calling OpenAI API:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Trivia Generator\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"triviaTitle\",children:\"Number of Questions:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:numberOfQuestions,onChange:e=>setNumberOfQuestions(Math.min(10,Math.max(1,parseInt(e.target.value,10)))),className:\"form-control\",id:\"triviaTitle\",placeholder:\"Number of Questions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"triviaCategory\",children:\"Category:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:category,onChange:e=>setCategory(e.target.value),className:\"form-control\",id:\"triviaCategory\",placeholder:\"Category\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"triviaAnswer\",children:\"placeholder\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"triviaAnswer\",placeholder:\"Place holder\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Generate\"})]})]});}export default TriviaGenPage;","map":{"version":3,"names":["React","useState","OpenAI","jsx","_jsx","jsxs","_jsxs","openai","apiKey","process","env","OPENAI_API_KEY","TriviaGenPage","numberOfQuestions","setNumberOfQuestions","category","setCategory","handleSubmit","event","preventDefault","prompt","completion","createCompletion","model","messages","role","content","console","log","data","choices","message","error","children","onSubmit","className","for","type","value","onChange","e","Math","min","max","parseInt","target","id","placeholder"],"sources":["/Users/SammyD/Desktop/Trivia-Forge/trivia-forge/src/Pages/TriviaGenPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport OpenAI from \"openai\";\n\n\n// initialize openai client\n// reference: https://platform.openai.com/docs/api-reference/making-requests\nconst openai = new OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n});\n\nfunction TriviaGenPage() {\n    const [numberOfQuestions, setNumberOfQuestions] = useState('');\n    const [category, setCategory] = useState('');\n    \n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        // api call\n        try {\n            const prompt = 'Generate ${numberOfQuestions} trivia questions about ${category}.';\n\n            // API call to OpenAI\n            const completion = await openai.createCompletion({\n                model: \"gpt-3.5-turbo\",\n                messages: [{role: \"user\", content: prompt }],\n                // adjust and use token limit if necessary\n                // max_tokens: 200\n                // implment and adjust temperature if needed\n                // temperature scale is 0-1 and used to tune randomness of output\n                // temperature: .5\n            });\n            \n            console.log(completion.data.choices[0].message);\n        } catch (error) {\n            console.error('Error calling OpenAI API:', error);\n        }\n    };\n\n\n    return (\n        <div>\n            <h1>\n                Trivia Generator\n            </h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label for=\"triviaTitle\">Number of Questions:</label>\n                    <input \n                        type=\"number\"\n                        value={numberOfQuestions}\n                        onChange={e => setNumberOfQuestions(Math.min(10, Math.max(1, parseInt(e.target.value, 10))))}\n                        className=\"form-control\" \n                        id=\"triviaTitle\" \n                        placeholder=\"Number of Questions\" \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"triviaCategory\">Category:</label>\n                    <input \n                        type=\"text\"\n                        value={category}\n                        onChange={e => setCategory(e.target.value)}\n                        className=\"form-control\" \n                        id=\"triviaCategory\" \n                        placeholder=\"Category\" \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"triviaAnswer\">placeholder</label>\n                    <input type=\"text\" className=\"form-control\" id=\"triviaAnswer\" placeholder=\"Place holder\" />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Generate</button>\n            </form>\n\n        </div>\n    );\n\n}\nexport default TriviaGenPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}